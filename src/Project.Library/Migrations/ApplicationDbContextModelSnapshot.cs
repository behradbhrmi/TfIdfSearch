// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University.Project.Library.DataAccess;

#nullable disable

namespace University.Project.Library.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("CustomFileModelWordTokenModel", b =>
                {
                    b.Property<int>("FilesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WordTokenModelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilesId", "WordTokenModelId");

                    b.HasIndex("WordTokenModelId");

                    b.ToTable("CustomFileModelWordTokenModel");
                });

            modelBuilder.Entity("University.Project.Library.Models.CustomFileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("University.Project.Library.Models.WordTokenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("CustomFileModelWordTokenModel", b =>
                {
                    b.HasOne("University.Project.Library.Models.CustomFileModel", null)
                        .WithMany()
                        .HasForeignKey("FilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University.Project.Library.Models.WordTokenModel", null)
                        .WithMany()
                        .HasForeignKey("WordTokenModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
