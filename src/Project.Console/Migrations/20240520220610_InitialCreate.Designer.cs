// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University.ConsoleApp.DataAccess;

#nullable disable

namespace University.ConsoleApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240520220610_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("TfidfModelWordTokenModel", b =>
                {
                    b.Property<int>("TfId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WordTokenModelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TfId", "WordTokenModelId");

                    b.HasIndex("WordTokenModelId");

                    b.ToTable("TfidfModelWordTokenModel");
                });

            modelBuilder.Entity("University.ConsoleApp.Models.CustomFileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("University.ConsoleApp.Models.DirectoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Directpries");
                });

            modelBuilder.Entity("University.ConsoleApp.Models.TfidfModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomFileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Repetation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomFileId");

                    b.ToTable("Tfidfs");
                });

            modelBuilder.Entity("University.ConsoleApp.Models.WordTokenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("TfidfModelWordTokenModel", b =>
                {
                    b.HasOne("University.ConsoleApp.Models.TfidfModel", null)
                        .WithMany()
                        .HasForeignKey("TfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University.ConsoleApp.Models.WordTokenModel", null)
                        .WithMany()
                        .HasForeignKey("WordTokenModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("University.ConsoleApp.Models.TfidfModel", b =>
                {
                    b.HasOne("University.ConsoleApp.Models.CustomFileModel", "CustomFile")
                        .WithMany()
                        .HasForeignKey("CustomFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFile");
                });
#pragma warning restore 612, 618
        }
    }
}
